name: Create DMG Variants

on:
  workflow_dispatch:
    inputs:
      atb-variants:
        description: "ATB variants (comma-separated)"
        required: true
        type: string
  workflow_call:
    secrets:
      BUILD_CERTIFICATE_BASE64:
        required: true
      P12_PASSWORD:
        required: true
      KEYCHAIN_PASSWORD:
        required: true
      REVIEW_PROVISION_PROFILE_BASE64:
        required: true
      RELEASE_PROVISION_PROFILE_BASE64:
        required: true
      DBP_AGENT_RELEASE_PROVISION_PROFILE_BASE64:
        required: true
      DBP_AGENT_REVIEW_PROVISION_PROFILE_BASE64:
        required: true
      NETP_SYSEX_RELEASE_PROVISION_PROFILE_BASE64_V2:
        required: true
      NETP_SYSEX_REVIEW_PROVISION_PROFILE_BASE64_V2:
        required: true
      NETP_AGENT_RELEASE_PROVISION_PROFILE_BASE64_V2:
        required: true
      NETP_AGENT_REVIEW_PROVISION_PROFILE_BASE64_V2:
        required: true
      NETP_NOTIFICATIONS_RELEASE_PROVISION_PROFILE_BASE64:
        required: true
      NETP_NOTIFICATIONS_REVIEW_PROVISION_PROFILE_BASE64:
        required: true
      APPLE_API_KEY_BASE64:
        required: true
      APPLE_API_KEY_ID:
        required: true
      APPLE_API_KEY_ISSUER:
        required: true
      ASANA_ACCESS_TOKEN:
        required: true
      MM_HANDLES_BASE64:
        required: true
      MM_WEBHOOK_URL:
        required: true
      AWS_ACCESS_KEY_ID_RELEASE_S3:
        required: true
      AWS_SECRET_ACCESS_KEY_RELEASE_S3:
        required: true
  push:
    branches:
      - alessandro/installation-attribution-ci

jobs:

  set-up-variants:

    name: Set Up Variants

    runs-on: macos-13
    timeout-minutes: 15

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Fetch Build Variants
        id: get-build-variants
        uses: ./.github/actions/asana-get-build-variants-list
        with:
          access-token: ${{ secrets.ASANA_ACCESS_TOKEN }}
          atb-asana-task-id: ${{ vars.DMG_VARIANTS_LIST_TASK_ID }}
          origin-asana-section-id: ${{ vars.DMG_VARIANTS_ORIGIN_SECTION_ID }}
          atb-variants: ${{ github.event.inputs.atb-variants }} #Only used when running the workflow manually.

  read-matrix:
    name: Read Matrix
    needs: set-up-variants 

    runs-on: macos-13
    timeout-minutes: 15

    steps:
      - name: Parse Matrix
        run: |
          matrix={"include":[{"variant":"ab"},{"origin":"abc.com"},{"origin":"abc.com","variant":"ab"}]}
          echo "VARIANT1: ${{ needs.set-up-variants.outputs.build-variants }}"
          echo "VARIANT2: ${{ needs.set-up-variants.outputs.get-build-variants }}"
  
  create-variants:

    name: Create Variant
    needs: set-up-variants
    if: false

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-up-variants.outputs.build-variants) }}
    uses: ./.github/workflows/create_dmg_variant.yml
    with:
      atb-variant: ${{ matrix.variant }}
      origin-variant: ${{ matrix.origin }}
    secrets:
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      REVIEW_PROVISION_PROFILE_BASE64: ${{ secrets.REVIEW_PROVISION_PROFILE_BASE64 }}
      RELEASE_PROVISION_PROFILE_BASE64: ${{ secrets.RELEASE_PROVISION_PROFILE_BASE64 }}
      DBP_AGENT_RELEASE_PROVISION_PROFILE_BASE64: ${{ secrets.DBP_AGENT_RELEASE_PROVISION_PROFILE_BASE64 }}
      DBP_AGENT_REVIEW_PROVISION_PROFILE_BASE64: ${{ secrets.DBP_AGENT_REVIEW_PROVISION_PROFILE_BASE64 }}
      NETP_SYSEX_RELEASE_PROVISION_PROFILE_BASE64_V2: ${{ secrets.NETP_SYSEX_RELEASE_PROVISION_PROFILE_BASE64_V2 }}
      NETP_SYSEX_REVIEW_PROVISION_PROFILE_BASE64_V2: ${{ secrets.NETP_SYSEX_REVIEW_PROVISION_PROFILE_BASE64_V2 }}
      NETP_AGENT_RELEASE_PROVISION_PROFILE_BASE64_V2: ${{ secrets.NETP_AGENT_RELEASE_PROVISION_PROFILE_BASE64_V2 }}
      NETP_AGENT_REVIEW_PROVISION_PROFILE_BASE64_V2: ${{ secrets.NETP_AGENT_REVIEW_PROVISION_PROFILE_BASE64_V2 }}
      NETP_NOTIFICATIONS_RELEASE_PROVISION_PROFILE_BASE64: ${{ secrets.NETP_NOTIFICATIONS_RELEASE_PROVISION_PROFILE_BASE64 }}
      NETP_NOTIFICATIONS_REVIEW_PROVISION_PROFILE_BASE64: ${{ secrets.NETP_NOTIFICATIONS_REVIEW_PROVISION_PROFILE_BASE64 }}
      APPLE_API_KEY_BASE64: ${{ secrets.APPLE_API_KEY_BASE64 }}
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_KEY_ISSUER: ${{ secrets.APPLE_API_KEY_ISSUER }}
      ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
      MM_HANDLES_BASE64: ${{ secrets.MM_HANDLES_BASE64 }}
      MM_WEBHOOK_URL: ${{ secrets.MM_WEBHOOK_URL }}
      AWS_ACCESS_KEY_ID_RELEASE_S3: ${{ secrets.AWS_ACCESS_KEY_ID_RELEASE_S3 }}
      AWS_SECRET_ACCESS_KEY_RELEASE_S3: ${{ secrets.AWS_SECRET_ACCESS_KEY_RELEASE_S3 }}
