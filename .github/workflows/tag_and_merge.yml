name: Tag and Merge

on:
  workflow_dispatch:
    inputs:
      asana-task-url:
        description: "Asana release task URL"
        required: true
        type: string
      base-branch:
        description: "Base branch name"
        required: false
        type: string
      branch:
        description: "Branch name"
        required: false
        type: string
  workflow_call:
    inputs:
      asana-task-url:
        description: "Asana release task URL"
        required: true
        type: string
      base-branch:
        description: "Base branch name"
        required: false
        type: string
      branch:
        description: "Branch name"
        required: false
        type: string
    secrets:
      ASANA_ACCESS_TOKEN:
        required: true
      GHA_ELEVATED_PERMISSIONS_TOKEN:
        required: true

jobs:
  tag-and-merge:

    name: Tag and Merge

    # This doesn't need Xcode, so could technically run on Ubuntu, but actions add comments and tasks in Asana
    # use BSD-specific sed syntax, that doesn't work with GNU sed (available on Linux).
    runs-on: macos-13

    env:
      asana-task-url: ${{ github.event.inputs.asana-task-url || inputs.asana-task-url }}
      BASE_BRANCH: ${{ inputs.base-branch || 'main' }}
      BRANCH: ${{ inputs.branch || github.ref_name }}

    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}

    steps:

    - name: Check out the code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ env.BRANCH }}

    - name: Create Tag and GitHub Release
      id: create-tag
      uses: ./.github/actions/create-tag-and-github-release
      with:
        prerelease: true
        github-token: ${{ github.token }}

    - name: Merge to base branch
      id: merge
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GHA_ELEVATED_PERMISSIONS_TOKEN }}
        script: |
          github.rest.repos.merge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            base: "${{ env.BASE_BRANCH }}",
            head: "${{ env.BRANCH }}"
          })

    - name: Set common environment variables
      if: always()
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "TAG=${{ steps.create-tag.outputs.tag }}" >> $GITHUB_ENV
        echo "WORKFLOW_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
        echo "DMG_URL=${{ vars.DMG_URL_ROOT }}duckduckgo-${{ steps.create-tag.outputs.tag }}.dmg" >> $GITHUB_ENV
        echo "RELEASE_URL=https://github.com/${{ github.repository }}/releases/tag/${{ steps.create-tag.outputs.tag }}" >> $GITHUB_ENV
        if [[ ${{ steps.create-tag.outputs.tag-created }} == "false" ]]; then
          last_release_tag=$(gh api /repos/${{ github.repository }}/releases/latest --jq '.tag_name')
          echo "LAST_RELEASE_TAG=${last_release_tag}" >> $GITHUB_ENV
        fi

    - name: Set up Asana templates
      if: failure()
      id: asana-templates
      run: |
        if [[ ${{ steps.create-tag.outputs.tag-created }} == "true" ]]; then
          echo "task-template=merge-failed" >> $GITHUB_OUTPUT
          echo "comment-template=internal-release-ready-merge-failed" >> $GITHUB_OUTPUT
        else
          echo "task-template=tag-failed" >> $GITHUB_OUTPUT
          echo "comment-template=internal-release-ready-tag-failed" >> $GITHUB_OUTPUT
        fi

    - name: Create Asana task on failure
      id: create-task-on-failure
      if: failure()
      uses: ./.github/actions/asana-create-action-item
      with:
        access-token: ${{ secrets.ASANA_ACCESS_TOKEN }}
        release-task-url: ${{ env.asana-task-url }}
        template-name: ${{ steps.asana-templates.outputs.task-template }}

    - name: Report failure
      if: failure()
      uses: ./.github/actions/asana-log-message
      env:
        ASSIGNEE_ID: ${{ steps.create-task-on-failure.outputs.assignee-id }}
        TASK_ID: ${{ steps.create-task-on-failure.outputs.new-task-id }}
      with:
        access-token: ${{ secrets.ASANA_ACCESS_TOKEN }}
        task-url: ${{ env.asana-task-url }}
        template-name: ${{ steps.asana-templates.outputs.comment-template }}

    - name: Report success
      if: success()
      uses: ./.github/actions/asana-log-message
      with:
        access-token: ${{ secrets.ASANA_ACCESS_TOKEN }}
        task-url: ${{ env.asana-task-url }}
        template-name: internal-release-ready
